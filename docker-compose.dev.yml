version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: lms_postgres_dev
    environment:
      POSTGRES_DB: library_management
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    networks:
      - lms_dev_network

  # Backend Service (Development)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: lms_backend_dev
    ports:
      - "8080:8080"
    volumes:
      # Bind mount source code for live reload
      - ./backend:/app
      # Go module cache
      - go_mod_cache:/go/pkg/mod
      - go_build_cache:/root/.cache/go-build
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=library_management
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_SSL_MODE=disable
      - BACKEND_HOST=0.0.0.0
      - BACKEND_PORT=8080
      - BACKEND_ENVIRONMENT=development
      - SWAGGER_ENABLED=true
      - SWAGGER_TITLE=Library Management System API
      - SWAGGER_DESCRIPTION=A RESTful API for managing books and URL processing
      - SWAGGER_VERSION=1.0
      - API_PREFIX=/api
      - API_VERSION=v1
      - API_TIMEOUT=30s
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
      - CORS_ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS
      - CORS_ALLOWED_HEADERS=Content-Type,Authorization
      - LOG_LEVEL=info
      - LOG_FORMAT=json
      - LOG_FILE=./logs/app.log
    depends_on:
      - postgres
    networks:
      - lms_dev_network
    restart: unless-stopped

  # Frontend Service (Development)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: lms_frontend_dev
    ports:
      - "3000:3000"
    volumes:
      # Bind mount source code for live reload
      - ./frontend:/app
      # Node modules cache
      - node_modules_dev:/app/node_modules
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8080
      - NODE_ENV=development
    depends_on:
      - backend
    networks:
      - lms_dev_network
    restart: unless-stopped

volumes:
  postgres_data_dev:
  go_mod_cache:
  go_build_cache:
  node_modules_dev:

networks:
  lms_dev_network:
    driver: bridge 